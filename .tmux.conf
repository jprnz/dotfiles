# Set prefix
unbind C-b
set -g prefix C-a

# Set default shell
set -g default-shell /bin/zsh

# send commands to nested session with a
bind a send-prefix

# reload this on 'r'
bind r source-file ~/.tmux.conf\; display "Reloading configuration..."

# copy mode to escape key
unbind [
bind Escape copy-mode

# Return to previous window
bind C-b last-window

# Ensure panes are created in the same directory
bind c new-window 

# Shortcuts to create split windows
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# and faster resizes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# vim copying
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up

# Similar to 'C-w j' to navigate windows in Vim
unbind-key j
unbind-key k
unbind-key h
unbind-key l
bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R

# For vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Rename window to reflect current program
set -g automatic-rename on

# Renumber windows when a window is closed
set -g renumber-windows on

# terminal
set -g default-terminal screen-256color
set -g history-limit 50000

# Shorten input delay (tmux normally adds a short delay on inputs)
set -sg escape-time 0

# fix resizing
setw -g aggressive-resize on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# If we want Vim to be told about focus: http://git.io/2UqSgQ
set -g focus-events on

# set terminal title
set -g set-titles on
set -g set-titles-string '#S | #H'

# Enable < 2.1 style mouse support 
set -g mouse

# clock
set -g clock-mode-colour colour192
set -g clock-mode-style 12

# Set border colors
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black

# Set message colors
set -g message-fg colour192
set -g message-bg colour0
set -g message-attr bright

# Status bar
#   H   Host, 
#   I   Current window index
#   P   Current pane index
#   S   Session name
#   T   Current window title
#   W   Current window name
#   #   A literal ‘#’
#

# Copy mode colors
set -g mode-fg colour192
set -g mode-bg colour0

# Set window list colors
set -g window-status-fg colour7
set -g window-status-bg colour0
set -g window-status-attr default
set -g window-status-activity-fg colour0
set -g window-status-activity-bg colour226

# Set window list active window colors
set -g window-status-current-fg colour192
set -g window-status-current-bg black
set -g window-status-current-attr default
setw -g window-status-current-format "[#I:#W:#F]"

set -g monitor-activity on
set -g visual-activity on
set -g status-justify right
set -g status-interval 60
set -g status-left-length 100
set -g status-right-length 100
set -g status-justify right
set -g status-fg colour7
set -g status-bg colour0

# Right Sep = ▐
# Mid Sep   = │
# Left Sep  = ▌

set -g status-left  '#[fg=colour232, bg=colour192, bright] P#P #[default]#[fg=colour192, bg=colour08] #S #[default]#[fg=colour229] #H #[default]'
set -g status-right '#[delfault]│ #[fg=colour229]%d/%m %H:%M#[default] '
